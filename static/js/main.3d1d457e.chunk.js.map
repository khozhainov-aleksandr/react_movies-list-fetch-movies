{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","Poster","Title","Plot","className","src","alt","MoviesList","movies","map","imdbID","MovieURL","getMovieListFromServer","title","a","fetch","response","json","Error","FindMovie","allMovies","onAddMovie","useState","currentMovie","setCurrentMovie","movieRequest","setMovieRequest","findError","setFindError","addedToList","setAddedToList","findMoveBtn","useCallback","searchFilms","onSubmit","event","preventDefault","some","htmlFor","type","id","placeholder","value","onChange","target","onClick","disabled","App","setMovies","addMovie","every","movi","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d1d457e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../react-app-env';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    Poster,\n    Title,\n    Plot,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { MovieCard } from '../MovieCard';\n\nimport { Movie } from '../../react-app-env';\nimport './MoviesList.scss';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbID}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from '../react-app-env';\n\nconst URL_API = 'http://www.omdbapi.com';\nconst KEY = '2936a80b';\n\nconst MovieURL = `${URL_API}/?apikey=${KEY}`;\n\nexport const getMovieListFromServer = async (title: string): Promise<Movie> => {\n  try {\n    const response = await fetch(`${MovieURL}&t=${title}`);\n\n    return await response.json();\n  } catch (error) {\n    throw new Error('Movie is not found!');\n  }\n};\n","import React, { useState, useCallback } from 'react';\nimport { getMovieListFromServer } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nimport { Movie } from '../../react-app-env';\nimport './FindMovie.scss';\n\ninterface Props {\n  allMovies: Movie[];\n  onAddMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  allMovies,\n  onAddMovie,\n}) => {\n  const [currentMovie, setCurrentMovie] = useState<Movie | null>(null);\n  const [movieRequest, setMovieRequest] = useState<string>('');\n  const [findError, setFindError] = useState<boolean>(false);\n  const [addedToList, setAddedToList] = useState<boolean>(false);\n\n  const onSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setFindError(false);\n    setCurrentMovie(null);\n    setMovieRequest('');\n\n    if (currentMovie) {\n      onAddMovie(currentMovie);\n    }\n\n    if (allMovies.some(movie => (\n      movie.imdbID === currentMovie?.imdbID\n    ))) {\n      setAddedToList(true);\n    } else {\n      setAddedToList(false);\n    }\n  };\n\n  const findMoveBtn = useCallback(async () => {\n    try {\n      const searchFilms = (\n        await getMovieListFromServer(movieRequest)\n      );\n\n      setCurrentMovie(searchFilms);\n    } catch (error) {\n      setFindError(true);\n    }\n  }, [movieRequest]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onSubmitForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={movieRequest}\n              onChange={(event) => {\n                setMovieRequest(event.target.value);\n                setFindError(false);\n              }}\n            />\n          </div>\n\n          {findError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"find\"\n              className=\"button is-light\"\n              onClick={() => findMoveBtn()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              data-cy=\"add\"\n              className=\"button is-primary\"\n              disabled={!currentMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {currentMovie && (\n          <MovieCard movie={currentMovie} />\n        )}\n\n        {addedToList && (\n          <span>\n            Film has already Added!\n          </span>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport { Movie } from './react-app-env';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    if (movies.every(movi => movi.imdbID !== movie.imdbID)) {\n      setMovies(currentMovies => [...currentMovies, movie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          allMovies={movies}\n          onAddMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}